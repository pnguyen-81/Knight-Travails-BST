(()=>{"use strict";var e={426:(e,r,t)=>{t.d(r,{Z:()=>p});var n=t(537),o=t.n(n),a=t(645),i=t.n(a),s=t(667),c=t.n(s),l=new URL(t(332),t.b),d=i()(o()),u=c()(l);d.push([e.id,"html {\r\n    background-color: rgba(255, 151, 82, 0.329);\r\n}\r\nbody {\r\n    color: rgb(255, 255, 255);\r\n    position: relative;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.tile {\r\n    height: 100px;\r\n    width: 100px;\r\n    position: relative;\r\n}\r\n\r\n.row {\r\n    height: 100px;\r\n    position: relative;\r\n    display: flex;\r\n}\r\n\r\n.gameboard {\r\n    margin: auto;\r\n    align-self: center;\r\n    border: 1px solid black;\r\n    position: relative;\r\n    width: 800px;\r\n}\r\n\r\n.knight{\r\n    background-image: url("+u+");\r\n    position: absolute;\r\n    background-size: 80px;\r\n    left: 14px;\r\n    background-repeat: no-repeat;\r\n    height: 80px;\r\n    width: 100px;\r\n}\r\n\r\n.active {\r\n    background-color: red;\r\n    box-shadow: 5px 5px 5px rgb(255, 92, 92, 0.7);\r\n}\r\n\r\ninput:invalid {\r\n    border: 2px dashed red;\r\n}\r\n\r\ninput:valid {\r\n    border: 2px solid black;\r\n  }","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,2CAA2C;AAC/C;AACA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,yDAA8D;IAC9D,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;IACV,4BAA4B;IAC5B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,6CAA6C;AACjD;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;EACzB",sourcesContent:["html {\r\n    background-color: rgba(255, 151, 82, 0.329);\r\n}\r\nbody {\r\n    color: rgb(255, 255, 255);\r\n    position: relative;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.tile {\r\n    height: 100px;\r\n    width: 100px;\r\n    position: relative;\r\n}\r\n\r\n.row {\r\n    height: 100px;\r\n    position: relative;\r\n    display: flex;\r\n}\r\n\r\n.gameboard {\r\n    margin: auto;\r\n    align-self: center;\r\n    border: 1px solid black;\r\n    position: relative;\r\n    width: 800px;\r\n}\r\n\r\n.knight{\r\n    background-image: url('./portablejim-Chess-tile-Knight-2.svg');\r\n    position: absolute;\r\n    background-size: 80px;\r\n    left: 14px;\r\n    background-repeat: no-repeat;\r\n    height: 80px;\r\n    width: 100px;\r\n}\r\n\r\n.active {\r\n    background-color: red;\r\n    box-shadow: 5px 5px 5px rgb(255, 92, 92, 0.7);\r\n}\r\n\r\ninput:invalid {\r\n    border: 2px dashed red;\r\n}\r\n\r\ninput:valid {\r\n    border: 2px solid black;\r\n  }"],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var t="",n=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),n&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=e(r),n&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(e,t,n,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(n)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);n&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},667:e=>{e.exports=function(e,r){return r||(r={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),r.hash&&(e+=r.hash),/["'() \t\n]|(%20)/.test(e)||r.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var r=e[1],t=e[3];if(!t)return r;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:e=>{var r=[];function t(e){for(var t=-1,n=0;n<r.length;n++)if(r[n].identifier===e){t=n;break}return t}function n(e,n){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],l=n.base?c[0]+n.base:c[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var p=t(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(A);else{var h=o(A,n);n.byIndex=s,r.splice(s,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(e,r){var t=r.domAPI(r);return t.update(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;t.update(e=r)}else t.remove()}}e.exports=function(e,o){var a=n(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);r[s].references--}for(var c=n(e,o),l=0;l<a.length;l++){var d=t(a[l]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=c}}},569:e=>{var r={};e.exports=function(e,t){var n=function(e){if(void 0===r[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}r[e]=t}return r[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(t)}},216:e=>{e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},565:(e,r,t)=>{e.exports=function(e){var r=t.nc;r&&e.setAttribute("nonce",r)}},795:e=>{e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(t){!function(e,r,t){var n="";t.supports&&(n+="@supports (".concat(t.supports,") {")),t.media&&(n+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(n+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),n+=t.css,o&&(n+="}"),t.media&&(n+="}"),t.supports&&(n+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(n,e,r.options)}(r,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},589:e=>{e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}},498:(e,r,t)=>{t.d(r,{B:()=>a,p:()=>i});let n,o=document.createElement("div");o.classList.add("knight");const a=()=>{n=[0,0];for(let e=0;e<8;e++){const r=document.createElement("div");r.classList.add("row"),r.dataset.row=e;let t=e;for(let e=0;e<8;e++){const a=document.createElement("div");a.classList.add("tile"),a.dataset.column=e,a.dataset.row=r.dataset.row,a.style.backgroundColor=(t+e)%2==0?"white":"black",r.appendChild(a),a.addEventListener("click",(()=>{(parseInt(n[0])+1==a.dataset.row&&parseInt(n[1])+2==a.dataset.column||parseInt(n[0])+1==a.dataset.row&&parseInt(n[1])-2==a.dataset.column||parseInt(n[0])-1==a.dataset.row&&parseInt(n[1])+2==a.dataset.column||parseInt(n[0])-1==a.dataset.row&&parseInt(n[1])-2==a.dataset.column||parseInt(n[0])+2==a.dataset.row&&parseInt(n[1])+1==a.dataset.column||parseInt(n[0])+2==a.dataset.row&&parseInt(n[1])-1==a.dataset.column||parseInt(n[0])-2==a.dataset.row&&parseInt(n[1])+1==a.dataset.column||parseInt(n[0])-2==a.dataset.row&&parseInt(n[1])-1==a.dataset.column)&&(a.appendChild(o),n=[a.dataset.row,a.dataset.column])}))}document.querySelector(".gameboard").appendChild(r)}document.querySelector("[data-row='0']>[data-column='0']").appendChild(o)},i=(e,r=0)=>{n=e;let t=document.querySelector(`[data-row='${e[0]}']>[data-column='${e[1]}']`);t.textContent=`${r}`,t.style.backgroundColor="red",t.appendChild(o),t.classList.add("active")}},424:(e,r,t)=>{t.d(r,{N:()=>n});class n{constructor(e,r=null,t=[]){this.data=e,this.parent=r,this.children=t}}},205:(e,r,t)=>{t.d(r,{p:()=>a});var n=t(424),o=t(498);const a=(e,r)=>{const t=new n.N(c(e)),a=c(r);let l,d=[t],u=t;for(;u.data[0]!=a[0]||u.data[1]!=a[1];){u=d.shift();let e=s(i(c(u.data)));u.children=e;for(let r of e)r[0]==a[0]&&r[1]==a[1]?(l=new n.N(r,u),u=l):d.push(new n.N(r,u))}let p=[];for(p.push(l.data);null!=l.parent;)p.push(l.parent.data),l=l.parent;console.log(`You made it in ${p.length-1} moves!`);let A=0;!function e(r){setTimeout((function(){console.log(p[r]),(0,o.p)(p[r],A),A++,r>0&&(r--,e(r))}),500)}(p.length-1),A=0},i=e=>{const r=[];return r.push([e[0]+1,e[1]-2]),r.push([e[0]+2,e[1]-1]),r.push([e[0]+1,e[1]+2]),r.push([e[0]+2,e[1]+1]),r.push([e[0]-1,e[1]-2]),r.push([e[0]-1,e[1]+2]),r.push([e[0]-2,e[1]-1]),r.push([e[0]-2,e[1]+1]),r},s=e=>e.filter((e=>e[0]>=0&&e[0]<=7&&e[1]>=0&&e[1]<=7));function c(e){return[parseInt(e[0]),parseInt(e[1])]}},332:(e,r,t)=>{e.exports=t.p+"161c8461993678135a1b.svg"}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var a=r[n]={id:n,exports:{}};return e[n](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var n=r.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),r=t.n(e),n=t(795),o=t.n(n),a=t(569),i=t.n(a),s=t(565),c=t.n(s),l=t(216),d=t.n(l),u=t(589),p=t.n(u),A=t(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),r()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;var f=t(205),m=t(498);(0,m.B)(),document.querySelector(".submit").addEventListener("click",(e=>{let r=document.querySelector(".coord1"),t=document.querySelector(".coord2"),n=document.querySelector(".coord3"),o=document.querySelector(".coord4");for(let a of document.querySelectorAll("input"))a.checkValidity()?(0,f.p)([r.value,t.value],[n.value,o.value]):(e.preventDefault(),a.reportValidity())}));let v=document.querySelector(".gameboard");document.querySelector(".reset").addEventListener("click",(()=>{for(;v.firstChild;)v.removeChild(v.lastChild);(0,m.B)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,